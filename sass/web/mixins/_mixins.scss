.clearfix {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}
.pull-right {
    float: right!important;
}
::-moz-selection {
    background-color: #897391;
    color: #fff;
    text-shadow: 0 0 0 transparent
}

::selection {
    background-color: #897391;
    color: #fff;
    text-shadow: 0 0 0 transparent
}


/*--------------------------------------------------------------
## Template Mixins
--------------------------------------------------------------*/

@mixin transition($property, $duration, $timing){
	-webkit-transition: $property $duration $timing;
	   -moz-transition: $property $duration $timing;
	    -ms-transition: $property $duration $timing;
	     -o-transition: $property $duration $timing;
	        transition: $property $duration $timing;
}


@mixin cover-div {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0px;
}

@mixin translateY($y-amount){
	-webkit-transform: translate3d(0,$y-amount,0);
	-moz-transform: translate3d(0,$y-amount,0);
	transform: translate3d(0,$y-amount,0);
}

@mixin translateX($x-amount){
	-webkit-transform: translate3d($x-amount,0,0);
	-moz-transform: translate3d($x-amount,0,0);
	transform: translate3d($x-amount,0,0);
}

@mixin transitionZoom($zoom-amount){
	-webkit-transform: scale($zoom-amount, $zoom-amount);
	-ms-transform: scale($zoom-amount, $zoom-amount);
	transform: scale($zoom-amount, $zoom-amount);
}

@mixin overlay-params($opacity-strength, $background-color){
	@extend .cover-div;
	content: '';  
	opacity: $opacity-strength; 
	z-index: 2;
	background-color: $background-color;
}

.blank-input{
	background: none;
	border: none;
	box-shadow: none;
	@extend .font-body;
}

@mixin placeholder($color: #fff) {
	input::-webkit-input-placeholder { color: $color; font-size: 24px; font-weight: 300; position: relative; top: 5px; }
	input:-moz-placeholder { color: $color; }
	textarea::-webkit-input-placeholder { color: $color; }
	textarea:-moz-placeholder { color: $color; }
}
@mixin font-face($font-family, $file-path, $font-weight, $font-style) {
  @font-face {
    font-family: $font-family;
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
           url('#{$file-path}.woff') format('woff'),
           url('#{$file-path}.ttf') format('truetype'),
           url('#{$file-path}.svg##{$font-family}') format('svg');
    font-weight: $font-weight;
    font-style: $font-style;
  }
}
@mixin font-face($style-name, $file, $family, $weight:"", $style:"") {
            $filepath: "../fonts/" + $family + "/" + $file;
            @font-face {
                font-family: "#{$style-name}";
                src: url($filepath + ".eot");
                src: local("#{$style-name}");
                src: url($filepath + ".eot?#iefix") format('embedded-opentype'),
                     url($filepath + ".woff") format('woff'),
                     url($filepath + ".ttf")  format('truetype'),
                     url($filepath + ".svg#" + $style-name + "") format('svg');
                     @if $weight != "" {
                font-weight: #{$weight};
                     }
                     @if $style != "" {
                font-style: #{$style};
                     }
            }
        }